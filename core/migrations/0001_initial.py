# Generated by Django 4.2.7 on 2025-07-10 20:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("address", models.TextField(blank=True)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="company_logos/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Companies",
            },
        ),
        migrations.CreateModel(
            name="Seller",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("guid", models.CharField(db_index=True, max_length=255, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("phone", models.CharField(blank=True, max_length=50, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("code", models.CharField(blank=True, max_length=100, null=True)),
                ("address", models.JSONField(blank=True, null=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("created_at_api", models.DateTimeField(blank=True, null=True)),
                ("updated_at_api", models.DateTimeField(blank=True, null=True)),
                ("created_at_local", models.DateTimeField(auto_now_add=True)),
                ("updated_at_local", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Seller",
                "verbose_name_plural": "Sellers",
            },
        ),
        migrations.CreateModel(
            name="VendorBill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("hubs", models.JSONField(blank=True, default=list, null=True)),
                ("status", models.CharField(default="draft", max_length=50)),
                ("pdf", models.URLField(blank=True, max_length=500, null=True)),
                (
                    "contract_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("period_start_date", models.DateTimeField(blank=True, null=True)),
                ("period_end_date", models.DateTimeField(blank=True, null=True)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
                (
                    "grand_total",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "grand_total_after_discount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("finalised_on", models.DateTimeField(blank=True, null=True)),
                (
                    "finalised_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("remark", models.TextField(blank=True, null=True)),
                ("fees", models.JSONField(blank=True, default=list, null=True)),
                ("hub_bills", models.JSONField(blank=True, default=list, null=True)),
                ("created_at_api", models.DateTimeField(blank=True, null=True)),
                ("created_at_local", models.DateTimeField(auto_now_add=True)),
                ("updated_at_local", models.DateTimeField(auto_now=True)),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="vendor_bills",
                        to="core.seller",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vendor Bill",
                "verbose_name_plural": "Vendor Bills",
                "ordering": ["-created_at_api"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("department", models.CharField(blank=True, max_length=100)),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[("en", "English"), ("ar", "Arabic")],
                        default="en",
                        max_length=10,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.company",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_id", models.CharField(max_length=100, unique=True)),
                ("omniful_id", models.CharField(max_length=100, unique=True)),
                (
                    "order_alias",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("seller_code", models.CharField(blank=True, max_length=50, null=True)),
                ("store_name", models.CharField(max_length=255)),
                (
                    "status_code",
                    models.CharField(
                        choices=[
                            ("new_order", "New Order"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("returned", "Returned"),
                            ("failed", "Failed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "order_type",
                    models.CharField(
                        choices=[("B2B", "B2B"), ("B2C", "B2C")], max_length=10
                    ),
                ),
                ("delivery_type", models.CharField(blank=True, max_length=50)),
                ("order_created_at", models.DateTimeField()),
                ("created_at_api", models.DateTimeField(blank=True, null=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                ("delivery_date", models.DateTimeField(blank=True, null=True)),
                (
                    "payment_mode",
                    models.CharField(
                        choices=[
                            ("Cash On Delivery", "Cash On Delivery"),
                            ("Prepaid", "Prepaid"),
                        ],
                        max_length=50,
                    ),
                ),
                ("payment_method", models.CharField(blank=True, max_length=50)),
                (
                    "total",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "billing_address",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    "shipping_address",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("shipping_city", models.CharField(blank=True, max_length=100)),
                ("shipping_region", models.CharField(blank=True, max_length=100)),
                ("shipping_country", models.CharField(blank=True, max_length=100)),
                ("customer", models.JSONField(blank=True, default=dict, null=True)),
                ("customer_first_name", models.CharField(max_length=100)),
                ("customer_last_name", models.CharField(max_length=100)),
                (
                    "customer_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "customer_phone",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("shipment", models.JSONField(blank=True, default=dict, null=True)),
                ("delivery_status", models.CharField(blank=True, max_length=50)),
                ("tracking_url", models.URLField(blank=True, null=True)),
                (
                    "shipment_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("require_shipping", models.BooleanField(default=True)),
                ("cancel_order_after_seconds", models.IntegerField(default=0)),
                ("expected_delivery_epoch", models.BigIntegerField(default=0)),
                ("invoice", models.JSONField(blank=True, default=dict, null=True)),
                ("days_to_deliver", models.IntegerField(blank=True, null=True)),
                ("is_delayed", models.BooleanField(default=False)),
                ("delay_category", models.CharField(blank=True, max_length=20)),
                ("raw_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core.seller",
                    ),
                ),
            ],
        ),
    ]
